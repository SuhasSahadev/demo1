name: Python package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pytest

    - name: Build package
      run: |
        python setup.py sdist bdist_wheel

    # - name: Install GitHub CLI
    #   run: |
    #     sudo apt-get install -y curl
    #     curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
    #     sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
    #     echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
    #     sudo apt-get update
    #     sudo apt-get install gh -y

    # - name: Authenticate GitHub CLI
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.API_TOKEN }}
    #   run: |
    #     unset GITHUB_TOKEN && echo $GITHUB_TOKEN | gh auth login --with-token

    # - name: Create GitHub Release
    #   run: |
    #     gh release create v0.1.1 --title "Second Release" --notes "Second release of the demo package" --repo SuhasSahadev/demo1

    # - name: Upload Package to GitHub Release
    #   run: |
    #     gh release upload v0.1.1 dist/demo1-0.1.1.tar.gz dist/demo1-0.1.1-py3-none-any.whl --repo SuhasSahadev/demo1
    - name: Get current date and time
      if: github.event_name == 'push'
      id: date
      run: echo "RELEASE_DATE=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Create dynamic release name
      if: github.event_name == 'push'
      run: |
        export RELEASE_NAME="release-${{ github.sha }}-${{ env.RELEASE_DATE }}"
        echo "RELEASE_NAME=${RELEASE_NAME}" >> $GITHUB_ENV

    # - name: Create GitHub Release
    #   if: github.event_name == 'push'
    #   run: |
    #     gh release create ${{ env.RELEASE_NAME }} --title "Automated Release ${{ env.RELEASE_DATE }}" --notes "Automated release created on ${{ env.RELEASE_DATE }}" --repo SuhasSahadev/demo1

    # - name: Upload Package to GitHub Release
    #   if: github.event_name == 'push'
    #   run: |
    #      gh release upload ${{ env.RELEASE_NAME }} dist/*.tar.gz dist/*.whl --repo SuhasSahadev/demo1
    - name: Create GitHub Release
      if: github.event_name == 'push'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
         gh release create ${{ env.RELEASE_NAME }} --title "Automated Release ${{ env.RELEASE_DATE }}" --notes "Automated release created on ${{ env.RELEASE_DATE }}" --repo SuhasSahadev/demo1

    - name: Upload Package to GitHub Release
       if: github.event_name == 'push'
       env:
         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
         gh release upload ${{ env.RELEASE_NAME }} dist/*.tar.gz dist/*.whl --repo SuhasSahadev/demo1